# This action was auto generated from the NetBox API Swagger Spec
# NetBox API version: 4.3
description: "Get a list of token objects."
enabled: true
entry_point: run.py
name: get.users.tokens
parameters:
  endpoint_uri:
    default: "/users/tokens/"
    immutable: true
    type: string
  http_verb:
    default: get
    immutable: true
    type: string
  get_detail_route_eligible:
    default: true
    immutable: true
    type: boolean
  fail_non_2xx:
    default: false
    type: boolean
    description: Set action as failed when http return reponse status isn't 2xx.
  created:
    required: false
    type: string
    description: "Created"
  created__gte:
    required: false
    type: string
    description: "Created greater than or equal to"
  created__lte:
    required: false
    type: string
    description: "Created less than or equal to"
  description:
    required: false
    type: array
    description: "Description"
  description__empty:
    required: false
    type: boolean
    description: "Description is empty/null (boolean)"
  description__ic:
    required: false
    type: array
    description: "Description contains (case-insensitive)"
  description__ie:
    required: false
    type: array
    description: "Description exact match (case-insensitive)"
  description__iew:
    required: false
    type: array
    description: "Description ends with (case-insensitive)"
  description__isw:
    required: false
    type: array
    description: "Description starts with (case-sensitive)"
  description__n:
    required: false
    type: array
    description: "Description not equal to"
  description__nic:
    required: false
    type: array
    description: "Description does not contain (case-insensitive)"
  description__nie:
    required: false
    type: array
    description: "Description inverse exact match (case-insensitive)"
  description__niew:
    required: false
    type: array
    description: "Description does not end with (case-insensitive)"
  description__nisw:
    required: false
    type: array
    description: "Description does not start with (case-sensitive)"
  expires:
    required: false
    type: string
    description: "Expires"
  expires__gte:
    required: false
    type: string
    description: "Expires greater than or equal to"
  expires__lte:
    required: false
    type: string
    description: "Expires less than or equal to"
  id:
    required: false
    type: array
    description: "Id"
  id__empty:
    required: false
    type: boolean
    description: "Id is empty/null (boolean)"
  id__gt:
    required: false
    type: array
    description: "Id greater than"
  id__gte:
    required: false
    type: array
    description: "Id greater than or equal to"
  id__lt:
    required: false
    type: array
    description: "Id less than"
  id__lte:
    required: false
    type: array
    description: "Id less than or equal to"
  id__n:
    required: false
    type: array
    description: "Id not equal to"
  key:
    required: false
    type: array
    description: "Key"
  key__empty:
    required: false
    type: boolean
    description: "Key is empty/null (boolean)"
  key__ic:
    required: false
    type: array
    description: "Key contains (case-insensitive)"
  key__ie:
    required: false
    type: array
    description: "Key exact match (case-insensitive)"
  key__iew:
    required: false
    type: array
    description: "Key ends with (case-insensitive)"
  key__isw:
    required: false
    type: array
    description: "Key starts with (case-sensitive)"
  key__n:
    required: false
    type: array
    description: "Key not equal to"
  key__nic:
    required: false
    type: array
    description: "Key does not contain (case-insensitive)"
  key__nie:
    required: false
    type: array
    description: "Key inverse exact match (case-insensitive)"
  key__niew:
    required: false
    type: array
    description: "Key does not end with (case-insensitive)"
  key__nisw:
    required: false
    type: array
    description: "Key does not start with (case-sensitive)"
  last_used:
    required: false
    type: array
    description: "Last_used"
  last_used__empty:
    required: false
    type: boolean
    description: "Last_used is empty/null (boolean)"
  last_used__gt:
    required: false
    type: array
    description: "Last_used greater than"
  last_used__gte:
    required: false
    type: array
    description: "Last_used greater than or equal to"
  last_used__lt:
    required: false
    type: array
    description: "Last_used less than"
  last_used__lte:
    required: false
    type: array
    description: "Last_used less than or equal to"
  last_used__n:
    required: false
    type: array
    description: "Last_used not equal to"
  limit:
    required: false
    type: integer
    description: "Number of results to return per page."
  offset:
    required: false
    type: integer
    description: "The initial index from which to return the results."
  ordering:
    required: false
    type: string
    description: "Which field to use when ordering the results."
  q:
    required: false
    type: string
    description: "Search"
  user:
    required: false
    type: array
    description: "User (name)"
  user__n:
    required: false
    type: array
    description: "User not equal to"
  user_id:
    required: false
    type: array
    description: "User"
  user_id__n:
    required: false
    type: array
    description: "User_id not equal to"
  write_enabled:
    required: false
    type: boolean
    description: "Write_enabled"
  save_in_key_store:
    type: boolean
    default: false
    description: Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.
  save_in_key_store_key_name:
    type: string
    description: Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.
  save_in_key_store_ttl:
    type: integer
    default: 60
    description: TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.
runner_type: python-script
