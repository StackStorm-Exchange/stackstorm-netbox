# This action was auto generated from the NetBox API Swagger Spec
# NetBox API version: 4.3
description: "Get a list of power port template objects."
enabled: true
entry_point: run.py
name: get.dcim.power_port_templates
parameters:
  endpoint_uri:
    default: "/dcim/power-port-templates/"
    immutable: true
    type: string
  http_verb:
    default: get
    immutable: true
    type: string
  get_detail_route_eligible:
    default: true
    immutable: true
    type: boolean
  fail_non_2xx:
    default: false
    type: boolean
    description: Set action as failed when http return reponse status isn't 2xx.
  allocated_draw:
    required: false
    type: array
    description: "Allocated_draw"
  allocated_draw__empty:
    required: false
    type: boolean
    description: "Allocated_draw is empty/null (boolean)"
  allocated_draw__gt:
    required: false
    type: array
    description: "Allocated_draw greater than"
  allocated_draw__gte:
    required: false
    type: array
    description: "Allocated_draw greater than or equal to"
  allocated_draw__lt:
    required: false
    type: array
    description: "Allocated_draw less than"
  allocated_draw__lte:
    required: false
    type: array
    description: "Allocated_draw less than or equal to"
  allocated_draw__n:
    required: false
    type: array
    description: "Allocated_draw not equal to"
  created:
    required: false
    type: array
    description: "Created"
  created__empty:
    required: false
    type: array
    description: "Created is empty/null (boolean)"
  created__gt:
    required: false
    type: array
    description: "Created greater than"
  created__gte:
    required: false
    type: array
    description: "Created greater than or equal to"
  created__lt:
    required: false
    type: array
    description: "Created less than"
  created__lte:
    required: false
    type: array
    description: "Created less than or equal to"
  created__n:
    required: false
    type: array
    description: "Created not equal to"
  created_by_request:
    required: false
    type: string
    description: "Created_by_request"
  description:
    required: false
    type: array
    description: "Description"
  description__empty:
    required: false
    type: boolean
    description: "Description is empty/null (boolean)"
  description__ic:
    required: false
    type: array
    description: "Description contains (case-insensitive)"
  description__ie:
    required: false
    type: array
    description: "Description exact match (case-insensitive)"
  description__iew:
    required: false
    type: array
    description: "Description ends with (case-insensitive)"
  description__isw:
    required: false
    type: array
    description: "Description starts with (case-sensitive)"
  description__n:
    required: false
    type: array
    description: "Description not equal to"
  description__nic:
    required: false
    type: array
    description: "Description does not contain (case-insensitive)"
  description__nie:
    required: false
    type: array
    description: "Description inverse exact match (case-insensitive)"
  description__niew:
    required: false
    type: array
    description: "Description does not end with (case-insensitive)"
  description__nisw:
    required: false
    type: array
    description: "Description does not start with (case-sensitive)"
  device_type_id:
    required: false
    type: array
    description: "Device type (ID)"
  device_type_id__n:
    required: false
    type: array
    description: "Device_type_id not equal to"
  id:
    required: false
    type: array
    description: "Id"
  id__empty:
    required: false
    type: boolean
    description: "Id is empty/null (boolean)"
  id__gt:
    required: false
    type: array
    description: "Id greater than"
  id__gte:
    required: false
    type: array
    description: "Id greater than or equal to"
  id__lt:
    required: false
    type: array
    description: "Id less than"
  id__lte:
    required: false
    type: array
    description: "Id less than or equal to"
  id__n:
    required: false
    type: array
    description: "Id not equal to"
  label:
    required: false
    type: array
    description: "Label"
  label__empty:
    required: false
    type: boolean
    description: "Label is empty/null (boolean)"
  label__ic:
    required: false
    type: array
    description: "Label contains (case-insensitive)"
  label__ie:
    required: false
    type: array
    description: "Label exact match (case-insensitive)"
  label__iew:
    required: false
    type: array
    description: "Label ends with (case-insensitive)"
  label__isw:
    required: false
    type: array
    description: "Label starts with (case-sensitive)"
  label__n:
    required: false
    type: array
    description: "Label not equal to"
  label__nic:
    required: false
    type: array
    description: "Label does not contain (case-insensitive)"
  label__nie:
    required: false
    type: array
    description: "Label inverse exact match (case-insensitive)"
  label__niew:
    required: false
    type: array
    description: "Label does not end with (case-insensitive)"
  label__nisw:
    required: false
    type: array
    description: "Label does not start with (case-sensitive)"
  last_updated:
    required: false
    type: array
    description: "Last_updated"
  last_updated__empty:
    required: false
    type: array
    description: "Last_updated is empty/null (boolean)"
  last_updated__gt:
    required: false
    type: array
    description: "Last_updated greater than"
  last_updated__gte:
    required: false
    type: array
    description: "Last_updated greater than or equal to"
  last_updated__lt:
    required: false
    type: array
    description: "Last_updated less than"
  last_updated__lte:
    required: false
    type: array
    description: "Last_updated less than or equal to"
  last_updated__n:
    required: false
    type: array
    description: "Last_updated not equal to"
  limit:
    required: false
    type: integer
    description: "Number of results to return per page."
  maximum_draw:
    required: false
    type: array
    description: "Maximum_draw"
  maximum_draw__empty:
    required: false
    type: boolean
    description: "Maximum_draw is empty/null (boolean)"
  maximum_draw__gt:
    required: false
    type: array
    description: "Maximum_draw greater than"
  maximum_draw__gte:
    required: false
    type: array
    description: "Maximum_draw greater than or equal to"
  maximum_draw__lt:
    required: false
    type: array
    description: "Maximum_draw less than"
  maximum_draw__lte:
    required: false
    type: array
    description: "Maximum_draw less than or equal to"
  maximum_draw__n:
    required: false
    type: array
    description: "Maximum_draw not equal to"
  modified_by_request:
    required: false
    type: string
    description: "Modified_by_request"
  module_type_id:
    required: false
    type: array
    description: "Module type (ID)"
  module_type_id__n:
    required: false
    type: array
    description: "Module_type_id not equal to"
  name:
    required: false
    type: array
    description: "Name"
  name__empty:
    required: false
    type: boolean
    description: "Name is empty/null (boolean)"
  name__ic:
    required: false
    type: array
    description: "Name contains (case-insensitive)"
  name__ie:
    required: false
    type: array
    description: "Name exact match (case-insensitive)"
  name__iew:
    required: false
    type: array
    description: "Name ends with (case-insensitive)"
  name__isw:
    required: false
    type: array
    description: "Name starts with (case-sensitive)"
  name__n:
    required: false
    type: array
    description: "Name not equal to"
  name__nic:
    required: false
    type: array
    description: "Name does not contain (case-insensitive)"
  name__nie:
    required: false
    type: array
    description: "Name inverse exact match (case-insensitive)"
  name__niew:
    required: false
    type: array
    description: "Name does not end with (case-insensitive)"
  name__nisw:
    required: false
    type: array
    description: "Name does not start with (case-sensitive)"
  offset:
    required: false
    type: integer
    description: "The initial index from which to return the results."
  ordering:
    required: false
    type: string
    description: "Which field to use when ordering the results."
  q:
    required: false
    type: string
    description: "Search"
  type:
    required: false
    type: string
    description: "* `IEC 60320` - [(&#39;iec-60320-c6&#39;, &#39;C6&#39;), (&#39;iec-60320-c8&#39;, &#39;C8&#39;), (&#39;iec-60320-c14&#39;, &#39;C14&#39;), (&#39;iec-60320-c16&#39;, &#39;C16&#39;), (&#39;iec-60320-c20&#39;, &#39;C20&#39;), (&#39;iec-60320-c22&#39;, &#39;C22&#39;)]
* `IEC 60309` - [(&#39;iec-60309-p-n-e-4h&#39;, &#39;P+N+E 4H&#39;), (&#39;iec-60309-p-n-e-6h&#39;, &#39;P+N+E 6H&#39;), (&#39;iec-60309-p-n-e-9h&#39;, &#39;P+N+E 9H&#39;), (&#39;iec-60309-2p-e-4h&#39;, &#39;2P+E 4H&#39;), (&#39;iec-60309-2p-e-6h&#39;, &#39;2P+E 6H&#39;), (&#39;iec-60309-2p-e-9h&#39;, &#39;2P+E 9H&#39;), (&#39;iec-60309-3p-e-4h&#39;, &#39;3P+E 4H&#39;), (&#39;iec-60309-3p-e-6h&#39;, &#39;3P+E 6H&#39;), (&#39;iec-60309-3p-e-9h&#39;, &#39;3P+E 9H&#39;), (&#39;iec-60309-3p-n-e-4h&#39;, &#39;3P+N+E 4H&#39;), (&#39;iec-60309-3p-n-e-6h&#39;, &#39;3P+N+E 6H&#39;), (&#39;iec-60309-3p-n-e-9h&#39;, &#39;3P+N+E 9H&#39;)]
* `IEC 60906-1` - [(&#39;iec-60906-1&#39;, &#39;IEC 60906-1&#39;), (&#39;nbr-14136-10a&#39;, &#39;2P+T 10A (NBR 14136)&#39;), (&#39;nbr-14136-20a&#39;, &#39;2P+T 20A (NBR 14136)&#39;)]
* `NEMA (Non-locking)` - [(&#39;nema-1-15p&#39;, &#39;NEMA 1-15P&#39;), (&#39;nema-5-15p&#39;, &#39;NEMA 5-15P&#39;), (&#39;nema-5-20p&#39;, &#39;NEMA 5-20P&#39;), (&#39;nema-5-30p&#39;, &#39;NEMA 5-30P&#39;), (&#39;nema-5-50p&#39;, &#39;NEMA 5-50P&#39;), (&#39;nema-6-15p&#39;, &#39;NEMA 6-15P&#39;), (&#39;nema-6-20p&#39;, &#39;NEMA 6-20P&#39;), (&#39;nema-6-30p&#39;, &#39;NEMA 6-30P&#39;), (&#39;nema-6-50p&#39;, &#39;NEMA 6-50P&#39;), (&#39;nema-10-30p&#39;, &#39;NEMA 10-30P&#39;), (&#39;nema-10-50p&#39;, &#39;NEMA 10-50P&#39;), (&#39;nema-14-20p&#39;, &#39;NEMA 14-20P&#39;), (&#39;nema-14-30p&#39;, &#39;NEMA 14-30P&#39;), (&#39;nema-14-50p&#39;, &#39;NEMA 14-50P&#39;), (&#39;nema-14-60p&#39;, &#39;NEMA 14-60P&#39;), (&#39;nema-15-15p&#39;, &#39;NEMA 15-15P&#39;), (&#39;nema-15-20p&#39;, &#39;NEMA 15-20P&#39;), (&#39;nema-15-30p&#39;, &#39;NEMA 15-30P&#39;), (&#39;nema-15-50p&#39;, &#39;NEMA 15-50P&#39;), (&#39;nema-15-60p&#39;, &#39;NEMA 15-60P&#39;)]
* `NEMA (Locking)` - [(&#39;nema-l1-15p&#39;, &#39;NEMA L1-15P&#39;), (&#39;nema-l5-15p&#39;, &#39;NEMA L5-15P&#39;), (&#39;nema-l5-20p&#39;, &#39;NEMA L5-20P&#39;), (&#39;nema-l5-30p&#39;, &#39;NEMA L5-30P&#39;), (&#39;nema-l5-50p&#39;, &#39;NEMA L5-50P&#39;), (&#39;nema-l6-15p&#39;, &#39;NEMA L6-15P&#39;), (&#39;nema-l6-20p&#39;, &#39;NEMA L6-20P&#39;), (&#39;nema-l6-30p&#39;, &#39;NEMA L6-30P&#39;), (&#39;nema-l6-50p&#39;, &#39;NEMA L6-50P&#39;), (&#39;nema-l10-30p&#39;, &#39;NEMA L10-30P&#39;), (&#39;nema-l14-20p&#39;, &#39;NEMA L14-20P&#39;), (&#39;nema-l14-30p&#39;, &#39;NEMA L14-30P&#39;), (&#39;nema-l14-50p&#39;, &#39;NEMA L14-50P&#39;), (&#39;nema-l14-60p&#39;, &#39;NEMA L14-60P&#39;), (&#39;nema-l15-20p&#39;, &#39;NEMA L15-20P&#39;), (&#39;nema-l15-30p&#39;, &#39;NEMA L15-30P&#39;), (&#39;nema-l15-50p&#39;, &#39;NEMA L15-50P&#39;), (&#39;nema-l15-60p&#39;, &#39;NEMA L15-60P&#39;), (&#39;nema-l21-20p&#39;, &#39;NEMA L21-20P&#39;), (&#39;nema-l21-30p&#39;, &#39;NEMA L21-30P&#39;), (&#39;nema-l22-20p&#39;, &#39;NEMA L22-20P&#39;), (&#39;nema-l22-30p&#39;, &#39;NEMA L22-30P&#39;)]
* `California Style` - [(&#39;cs6361c&#39;, &#39;CS6361C&#39;), (&#39;cs6365c&#39;, &#39;CS6365C&#39;), (&#39;cs8165c&#39;, &#39;CS8165C&#39;), (&#39;cs8265c&#39;, &#39;CS8265C&#39;), (&#39;cs8365c&#39;, &#39;CS8365C&#39;), (&#39;cs8465c&#39;, &#39;CS8465C&#39;)]
* `International/ITA` - [(&#39;ita-c&#39;, &#39;ITA Type C (CEE 7/16)&#39;), (&#39;ita-e&#39;, &#39;ITA Type E (CEE 7/6)&#39;), (&#39;ita-f&#39;, &#39;ITA Type F (CEE 7/4)&#39;), (&#39;ita-ef&#39;, &#39;ITA Type E/F (CEE 7/7)&#39;), (&#39;ita-g&#39;, &#39;ITA Type G (BS 1363)&#39;), (&#39;ita-h&#39;, &#39;ITA Type H&#39;), (&#39;ita-i&#39;, &#39;ITA Type I&#39;), (&#39;ita-j&#39;, &#39;ITA Type J&#39;), (&#39;ita-k&#39;, &#39;ITA Type K&#39;), (&#39;ita-l&#39;, &#39;ITA Type L (CEI 23-50)&#39;), (&#39;ita-m&#39;, &#39;ITA Type M (BS 546)&#39;), (&#39;ita-n&#39;, &#39;ITA Type N&#39;), (&#39;ita-o&#39;, &#39;ITA Type O&#39;)]
* `USB` - [(&#39;usb-a&#39;, &#39;USB Type A&#39;), (&#39;usb-b&#39;, &#39;USB Type B&#39;), (&#39;usb-c&#39;, &#39;USB Type C&#39;), (&#39;usb-mini-a&#39;, &#39;USB Mini A&#39;), (&#39;usb-mini-b&#39;, &#39;USB Mini B&#39;), (&#39;usb-micro-a&#39;, &#39;USB Micro A&#39;), (&#39;usb-micro-b&#39;, &#39;USB Micro B&#39;), (&#39;usb-micro-ab&#39;, &#39;USB Micro AB&#39;), (&#39;usb-3-b&#39;, &#39;USB 3.0 Type B&#39;), (&#39;usb-3-micro-b&#39;, &#39;USB 3.0 Micro B&#39;)]
* `Molex` - [(&#39;molex-micro-fit-1x2&#39;, &#39;Molex Micro-Fit 1x2&#39;), (&#39;molex-micro-fit-2x2&#39;, &#39;Molex Micro-Fit 2x2&#39;), (&#39;molex-micro-fit-2x4&#39;, &#39;Molex Micro-Fit 2x4&#39;)]
* `DC` - [(&#39;dc-terminal&#39;, &#39;DC Terminal&#39;)]
* `Proprietary` - [(&#39;saf-d-grid&#39;, &#39;Saf-D-Grid&#39;), (&#39;neutrik-powercon-20&#39;, &#39;Neutrik powerCON (20A)&#39;), (&#39;neutrik-powercon-32&#39;, &#39;Neutrik powerCON (32A)&#39;), (&#39;neutrik-powercon-true1&#39;, &#39;Neutrik powerCON TRUE1&#39;), (&#39;neutrik-powercon-true1-top&#39;, &#39;Neutrik powerCON TRUE1 TOP&#39;), (&#39;ubiquiti-smartpower&#39;, &#39;Ubiquiti SmartPower&#39;)]
* `Other` - [(&#39;hardwired&#39;, &#39;Hardwired&#39;), (&#39;other&#39;, &#39;Other&#39;)]"
  updated_by_request:
    required: false
    type: string
    description: "Updated_by_request"
  save_in_key_store:
    type: boolean
    default: false
    description: Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.
  save_in_key_store_key_name:
    type: string
    description: Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.
  save_in_key_store_ttl:
    type: integer
    default: 60
    description: TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.
runner_type: python-script
